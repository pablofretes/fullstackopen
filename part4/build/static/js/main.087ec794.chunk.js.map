{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/LoginForm.js","components/Toggable.js","components/BlogForm.js","App.js","index.js"],"names":["Blog","blog","likeHandler","deleteHandler","useState","visibility","setVisibility","style","paddingTop","paddingLeft","paddingBottom","border","borderWidth","marginBottom","data-cy","title","author","className","onClick","likes","id","url","user","username","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","update","put","deleteBlog","delete","login","credentials","LoginForm","props","onSubmit","handleSubmit","type","value","name","onChange","handleChangeUsername","password","handleChangePassword","Toggable","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","BlogForm","newBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","newBlogHandler","event","preventDefault","target","App","blogs","setBlogs","setUsername","setPassword","setUser","errorMessage","setErrorMessage","setUpdate","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","userLog","JSON","parse","console","log","handleLogin","loginService","setItem","stringify","setTimeout","clear","newBlogObject","concat","likeUpdate","Number","Math","random","toFixed","deleteHelper","confirm","sort","b","map","key","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.087ec794.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Blog = ({ blog, likeHandler, deleteHandler }) => {\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 5,\r\n    paddingBottom: 10,\r\n    border: 'solid',\r\n    borderWidth: 3,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const [visibility, setVisibility] = useState(false)\r\n\r\n  const toggleVisibility = () => {\r\n    setVisibility(!visibility)\r\n  }\r\n\r\n  const showLikesAndUrl = () => {\r\n    return (\r\n      <div>\r\n        <div className='likes-container' data-cy='like-container'>\r\n          {blog.likes} <button className='like-button' data-cy='like-button' onClick={() => likeHandler(blog.id, blog.likes, blog.author, blog.title, blog.url)}>Like</button>\r\n        </div>\r\n        <p>\r\n          {blog.url}\r\n        </p>\r\n        <p>\r\n          {blog.user.username}\r\n        </p>\r\n        <button className='delete-button' data-cy='delete-button' onClick={() => deleteHandler(blog.id, blog.title, blog.author)}>Delete</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style={blogStyle} data-cy='blogs'>\r\n      {blog.title} By <strong>{blog.author}</strong>\r\n      <div>\r\n        <button className='visibility-button' data-cy='visibility-button' onClick={toggleVisibility}>{visibility ? 'hide' : 'view'}</button>\r\n        {visibility ? (\r\n          <div data-cy='show-likes'>\r\n            {showLikesAndUrl()}\r\n          </div>\r\n        ) : ('')\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  await axios.delete(`${baseUrl}/${id}`, config)\r\n}\r\n\r\nexport default { getAll, create, setToken, update, deleteBlog }","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n          username\r\n        <input\r\n          id='username-input'\r\n          data-cy='username'\r\n          type=\"text\"\r\n          value={props.username}\r\n          name=\"Username\"\r\n          onChange={props.handleChangeUsername}\r\n        >\r\n        </input>\r\n          password\r\n        <input\r\n          id='password-input'\r\n          data-cy='password'\r\n          type=\"password\"\r\n          value={props.password}\r\n          name=\"Password\"\r\n          onChange={props.handleChangePassword}\r\n        >\r\n        </input>\r\n      </div>\r\n      <button id='login-button' data-cy='login-button' type=\"submit\">Log-in</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleChangePassword: PropTypes.func.isRequired,\r\n  handleChangeUsername: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Toggable = (props) => {\r\n  const [visibility, setVisibility] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visibility ? 'none' : '' }\r\n  const showWhenVisible = { display: visibility ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisibility(!visibility)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button id='cancel-button' data-cy='cancel-button' onClick={toggleVisibility}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nToggable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Toggable","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ newBlog }) => {\r\n  const [newTitle, setNewTitle] = useState('')\r\n  const [newAuthor, setNewAuthor] = useState('')\r\n  const [newUrl, setNewUrl] = useState('')\r\n\r\n  const newBlogHandler = async (event) => {\r\n    event.preventDefault()\r\n\r\n    newBlog({\r\n      title: newTitle,\r\n      author: newAuthor,\r\n      url: newUrl\r\n    })\r\n\r\n    setNewTitle('')\r\n    setNewAuthor('')\r\n    setNewUrl('')\r\n  }\r\n\r\n  const handleNewBlog = () => (\r\n    <form onSubmit={newBlogHandler}>\r\n            Title<input id=\"title\" data-cy='title' type=\"text\" name=\"Title\" value={newTitle} onChange={({ target }) => setNewTitle(target.value)}></input><br></br>\r\n            Author<input id=\"author\" data-cy='author' type=\"text\" name=\"Author\" value={newAuthor} onChange={({ target }) => setNewAuthor(target.value)}></input><br></br>\r\n            Url<input id=\"url\" data-cy='url' type=\"text\" name=\"Url\" value={newUrl} onChange={({ target }) => setNewUrl(target.value)}></input><br></br>\r\n      <button type=\"submit\" data-cy='create-button'>Create</button>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div>{handleNewBlog()}</div>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport LoginForm from './components/LoginForm'\r\nimport Toggable from './components/Toggable'\r\nimport BlogForm from './components/BlogForm'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [update, setUpdate] = useState(null)\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )\r\n  }, [update])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    if (loggedUserJSON) {\r\n      const userLog = JSON.parse(loggedUserJSON)\r\n      console.log(userLog)\r\n      setUser(userLog)\r\n      blogService.setToken(userLog.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const userLog = await loginService.login({ username, password })\r\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(userLog))\r\n      blogService.setToken(userLog.token)\r\n      setUser(userLog)\r\n      console.log(userLog)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      console.log(username, password)\r\n      setErrorMessage('Username or Password are incorrect')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n      window.localStorage.clear()\r\n    }\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <Toggable buttonLabel=\"Login\">\r\n      <LoginForm\r\n        username={username}\r\n        password={password}\r\n        handleChangeUsername={({ target }) => setUsername(target.value)}\r\n        handleChangePassword={({ target }) => setPassword(target.value)}\r\n        handleSubmit={handleLogin}\r\n      />\r\n    </Toggable>\r\n  )\r\n\r\n  const blogsList = () => (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      {blogs.sort((a, b) => (b.likes - a.likes)) && blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} likeHandler={likeUpdate} deleteHandler={deleteHelper}/>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  const newBlog = async (newBlogObject) => {\r\n    const response = await blogService.create(newBlogObject)\r\n    setBlogs(blogs.concat(response))\r\n    setErrorMessage('A new Blog has been created')\r\n    setTimeout(() => {\r\n      setErrorMessage(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Toggable buttonLabel=\"Create new Blog\">\r\n      <BlogForm\r\n        newBlog={newBlog}\r\n        blogService={blogService}\r\n        setBlogs={setBlogs}\r\n        blogs={blogs}\r\n        setErrorMessage={setErrorMessage}\r\n      />\r\n    </Toggable>\r\n  )\r\n\r\n  const handleLogout = () => {\r\n    const logout = window.localStorage.removeItem('loggedBlogAppUser')\r\n    if(logout) {\r\n      setUser(null)\r\n    }\r\n  }\r\n\r\n  const likeUpdate = async (id, likes, author, title, url) => {\r\n\r\n    await blogService.update(id, {\r\n      likes: likes + 1,\r\n      author: author,\r\n      title: title,\r\n      url: url\r\n    })\r\n\r\n    setUpdate(Number(Math.random() * 99999999999).toFixed(0))\r\n  }\r\n\r\n  const deleteHelper = async (id, title, author) => {\r\n    const result = window.confirm(`Delete Blog ${title} by ${author}?`)\r\n\r\n    if(result) {\r\n      await blogService.deleteBlog(id)\r\n    }\r\n    setUpdate(Number(Math.random() * 99999999999).toFixed(0))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div data-cy='error-message'>\r\n        {errorMessage}\r\n      </div>\r\n      {user === null ?\r\n        loginForm():\r\n        <div>\r\n          {blogForm()}\r\n          {blogsList()}\r\n          <h1>{user.name} logged-in <br></br> {user.blogs} </h1>\r\n          <button onClick={handleLogout}>Logout</button><br></br>\r\n        </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}