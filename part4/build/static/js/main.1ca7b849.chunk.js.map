{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","axios","get","then","response","data","newToken","login","credentials","a","post","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","userLog","JSON","parse","console","log","token","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","onSubmit","type","value","name","onChange","target","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"2OAOeA,EANF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,6BACGA,EAAKC,MADR,IACgBD,EAAKE,S,gBCwBR,EAnBA,WAEb,OADgBC,IAAMC,IARR,cASCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB5B,EAvBE,SAAAC,GACV,iBAAaA,ICIL,GAAEC,MALN,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACJL,EAAWH,IAAMS,KAHX,aAGyBF,GAD3B,kBAEHJ,EAASC,MAFN,2CAAH,uDCiGIM,EAhGH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGgBJ,mBAAS,IAHzB,mBAGTK,EAHS,KAGCC,EAHD,OAIQN,mBAAS,MAJjB,mBAITO,EAJS,KAIHC,EAJG,OAKwBR,mBAAS,MALjC,mBAKTS,EALS,KAKKC,EALL,KAOhBC,qBAAU,WACRC,IAAqBrB,MAAK,SAAAU,GAAK,OAC7BC,EAAUD,QAEX,IAEHU,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMI,EAAUC,KAAKC,MAAMN,GAC3BO,QAAQC,IAAIJ,GACZT,EAAQS,GACRL,EAAqBK,EAAQK,UAE9B,IAEH,IAAMC,EAAW,uCAAG,WAAOC,GAAP,eAAA3B,EAAA,6DAClB2B,EAAMC,iBADY,kBAIMC,EAAa/B,MAAM,CACvCQ,WACAE,aANc,OAIVY,EAJU,OAQhBH,OAAOC,aAAaY,QAAQ,oBAAqBT,KAAKU,UAAUX,IAChEL,EAAqBK,EAAQK,OAC7Bd,EAAQS,GACRG,QAAQC,IAAIJ,GACZG,QAAQC,IAAId,GACZH,EAAY,IACZE,EAAY,IAdI,kDAgBhBI,EAAgB,sCAChBmB,YAAW,WACTnB,EAAgB,QACf,KAnBa,0DAAH,sDAyDjB,OACE,6BACE,6BACGD,GAEO,OAATF,EAtCD,0BAAMuB,SAAUP,GACd,wCAEI,2BACAQ,KAAK,OACLC,MAAO7B,EACP8B,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB/B,EAAY+B,EAAOH,UANjD,WAUI,2BACAD,KAAK,WACLC,MAAO3B,EACP4B,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB7B,EAAY6B,EAAOH,WAIjD,4BAAQD,KAAK,UAAb,UAqBF,6BACE,2BAAIxB,EAAK0B,KAAT,cACA,2BAAI1B,EAAKN,OAlBX,6BACA,qCACCA,EAAMmC,KAAI,SAAAlD,GAAI,OACb,kBAAC,EAAD,CAAMmD,IAAKnD,EAAKoD,GAAIpD,KAAMA,WC3ElCqD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1ca7b849.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, setToken, update }","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const response = axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  \r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    if (loggedUserJSON) {\r\n      const userLog = JSON.parse(loggedUserJSON)\r\n      console.log(userLog)\r\n      setUser(userLog)\r\n      blogService.setToken(userLog.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const userLog = await loginService.login({ \r\n        username, \r\n        password,\r\n      })\r\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(userLog))\r\n      blogService.setToken(userLog.token)\r\n      setUser(userLog)\r\n      console.log(userLog)\r\n      console.log(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('Username or Password are incorrect')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const loginForm = () => (\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          username \r\n            <input \r\n            type='text'\r\n            value={username}\r\n            name='Username'\r\n            onChange={({ target }) => setUsername(target.value)} \r\n            >\r\n            </input>\r\n          password\r\n            <input\r\n            type='password'\r\n            value={password}\r\n            name='Password'\r\n            onChange={({ target }) => setPassword(target.value)}\r\n            >\r\n            </input>\r\n        </div>\r\n        <button type='submit'>Login</button>\r\n      </form> \r\n  )\r\n\r\n  const blogForm = () => (\r\n      <div>\r\n      <h2>blogs</h2>\r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n      </div>\r\n  )\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {errorMessage}\r\n      </div>\r\n      {user === null ? \r\n      loginForm() : \r\n      <div> \r\n        <p>{user.name} logged-in</p>\r\n        <p>{user.blogs}</p>\r\n        {blogForm()}\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}