{"version":3,"sources":["reducers/notificationReducer.js","components/Blog.js","services/login.js","services/blogs.js","reducers/loginReducer.js","components/LoginForm.js","components/Toggable.js","reducers/blogsReducer.js","components/BlogForm.js","components/Users.js","components/User.js","services/users.js","reducers/usersReducer.js","components/Notification.js","components/IndividualBlog.js","App.js","store.js","index.js"],"names":["timeout","Blog","blog","Container","style","verticalAlign","paddingTop","paddingLeft","paddingBottom","border","borderWidth","marginBottom","maxWidth","to","id","title","author","login","credentials","a","axios","post","response","data","token","getAll","get","then","create","newObject","config","headers","Authorization","setToken","newToken","update","put","deleteBlog","delete","postComment","newComment","comment","notificationGreen","message","seconds","dispatch","clearInterval","setTimeout","type","notificationRed","notificationReducer","state","action","existingLogin","loggedUserJSON","window","localStorage","getItem","userLog","JSON","parse","blogService","loginReducer","LoginForm","useDispatch","useEffect","onSubmit","event","preventDefault","username","target","value","password","loginService","setItem","stringify","clear","newLogin","data-cy","name","Toggable","props","useState","visibility","setVisibility","hideWhenVisible","display","showWhenVisible","toggleVisibility","onClick","buttonLabel","children","createNewBlog","content","newBlog","initBlogs","blogs","blogsReducer","console","log","blogToBeLiked","find","b","changedBlog","likes","map","filter","BlogForm","newBlogHandler","contentTitle","contentAuthor","contentUrl","url","Users","users","TableContainer","component","Paper","Table","TableBody","TableRow","TableCell","user","key","length","User","getUsers","usersReducer","Notification","notification","Alert","severity","IndividualBlog","history","useHistory","likeHandler","likedBlog","likeBlog","deleteHandler","confirm","push","undefined","className","commentBlog","placeholder","comments","App","userService","useSelector","loggedUser","matchUser","useRouteMatch","u","params","matchBlog","AppBar","position","Button","color","Link","removeItem","path","sort","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8b69879.chunk.js","sourcesContent":["const notificationReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'NOTIFICATION_GREEN':\r\n    return action.data\r\n  case 'NOTIFICATION_RED':\r\n    return action.data\r\n  case 'NOTIFICATION_DELETE':\r\n    return null\r\n  default: return state\r\n  }\r\n}\r\n\r\nlet timeout\r\n\r\nexport const notificationGreen = (message, seconds) => {\r\n  return async dispatch => {\r\n    clearInterval(timeout)\r\n    timeout = setTimeout(() => {\r\n      dispatch({\r\n        type:'NOTIFICATION_DELETE'\r\n      })\r\n    }, (seconds * 1000))\r\n\r\n    dispatch({\r\n      type: 'NOTIFICATION_GREEN',\r\n      data: {\r\n        message,\r\n        type: 'success'\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const notificationRed = (message, seconds) => {\r\n  return async dispatch => {\r\n    clearInterval(timeout)\r\n    timeout = setTimeout(() => {\r\n      dispatch({\r\n        type:'NOTIFICATION_DELETE'\r\n      })\r\n    }, (seconds * 1000))\r\n\r\n    dispatch({\r\n      type: 'NOTIFICATION_RED',\r\n      data:{\r\n        message,\r\n        type: 'error'\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container'\r\nimport '../App.css'\r\n\r\nconst Blog = ({ blog }) => {\r\n\r\n\r\n  const blogStyle = {\r\n    verticalAlign: 'middle',\r\n    paddingTop: 10,\r\n    paddingLeft: 5,\r\n    paddingBottom: 10,\r\n    border: 'solid',\r\n    borderWidth: 3,\r\n    marginBottom: 5\r\n  }\r\n\r\n  return (\r\n    <Container style={blogStyle} maxWidth=\"sm\" >\r\n      <Link to={`/blogs/${blog.id}`}>{blog.title} By <strong>{blog.author}</strong></Link>\r\n    </Container>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Blog","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  await axios.delete(`${baseUrl}/${id}`, config)\r\n}\r\n\r\nconst postComment = async (id, newComment) => {\r\n  const response = await axios.post(`${baseUrl}/${id}/comments`, { comment: newComment })\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, setToken, update, deleteBlog, postComment }","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\nimport { notificationGreen, notificationRed } from './notificationReducer'\r\n\r\nconst loginReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'LOG_IN':\r\n    return action.data\r\n  case 'LOGGED_IN':\r\n    return action.data\r\n  case 'LOGOUT':\r\n    return null\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const existingLogin = () => {\r\n\r\n  const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n  if(loggedUserJSON){\r\n    const userLog = JSON.parse(loggedUserJSON)\r\n    blogService.setToken(userLog.token)\r\n    return {\r\n      type: 'LOGGED_IN',\r\n      data: userLog\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: 'LOGOUT'\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n  window.localStorage.removeItem('loggedBlogAppUser')\r\n  return {\r\n    type: 'LOGOUT'\r\n  }\r\n}\r\n\r\nexport const newLogin = (username, password) => {\r\n  return async dispatch => {\r\n    try {\r\n      const userLog = await loginService.login({ username, password })\r\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(userLog))\r\n      blogService.setToken(userLog.token)\r\n      dispatch({\r\n        type: 'LOG_IN',\r\n        data: userLog\r\n      })\r\n      dispatch(notificationGreen(`Welcome ${userLog.username}`, 5))\r\n    }\r\n    catch (err) {\r\n      dispatch(notificationRed(err))\r\n      dispatch(notificationRed('Incorrect Username or Password', 5))\r\n      window.localStorage.clear()\r\n    }\r\n  }\r\n}\r\n\r\nexport default loginReducer","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { existingLogin, newLogin } from '../reducers/loginReducer'\r\nimport { notificationGreen } from '../reducers/notificationReducer'\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(existingLogin())\r\n  })\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n    const username = event.target.username.value\r\n    event.target.username.value = ''\r\n    const password = event.target.password.value\r\n    event.target.password.value = ''\r\n\r\n    dispatch(newLogin(username, password))\r\n    dispatch(notificationGreen(`Welcome ${username}`), 5)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n          username\r\n        <input\r\n          id='username-input'\r\n          data-cy='username'\r\n          type=\"text\"\r\n          name=\"username\"\r\n        >\r\n        </input>\r\n          password\r\n        <input\r\n          id='password-input'\r\n          data-cy='password'\r\n          type=\"password\"\r\n          name=\"password\"\r\n        >\r\n        </input>\r\n      </div>\r\n      <button id='login-button' data-cy='login-button' type=\"submit\">Log-in</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Toggable = (props) => {\r\n  const [visibility, setVisibility] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visibility ? 'none' : '' }\r\n  const showWhenVisible = { display: visibility ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisibility(!visibility)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button id='cancel-button' data-cy='cancel-button' onClick={toggleVisibility}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nToggable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Toggable","import blogService from '../services/blogs'\r\n\r\nconst blogsReducer = (state = [], action) => {\r\n  console.log('state is', state)\r\n  console.log('action is', action)\r\n  switch (action.type) {\r\n  case 'NEW_BLOG':\r\n    return [...state, action.data]\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  case 'LIKE': {\r\n    const id = action.data.id\r\n    const blogToBeLiked = state.find(b => b.id === id)\r\n    const changedBlog = {\r\n      ...blogToBeLiked,\r\n      likes: blogToBeLiked.likes + 1\r\n    }\r\n    return state.map(blog => blog.id === id ? changedBlog : blog)\r\n  }\r\n  case 'DELETE': {\r\n    const id = action.data\r\n    return state.blogs.filter(blog => blog.id !== id)\r\n  }\r\n  case 'COMMENT': {\r\n    return state.map(blog => blog.id !== action.data.id ? blog : action.data)\r\n  }\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const createNewBlog = (content) => {\r\n  return async dispatch => {\r\n    const newBlog = await blogService.create(content)\r\n\r\n    dispatch({\r\n      type: 'NEW_BLOG',\r\n      data: newBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blog) => {\r\n  return async dispatch => {\r\n    const likedBlog = await blogService.update(blog.id, { ...blog, likes: blog.likes + 1 })\r\n    dispatch({\r\n      type: 'LIKE',\r\n      data: likedBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const initBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (blog) => {\r\n  return async dispatch => {\r\n    await blogService.deleteBlog(blog.id)\r\n    dispatch({\r\n      type: 'DELETE_BLOG',\r\n      data: blog.id\r\n    })\r\n  }\r\n}\r\n\r\nexport const commentBlog = (content, blog) => {\r\n  return async dispatch => {\r\n    const newComment = await blogService.postComment(blog.id, content)\r\n    dispatch({\r\n      type: 'COMMENT',\r\n      data: newComment\r\n    })\r\n  }\r\n}\r\n\r\nexport default blogsReducer","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createNewBlog } from '../reducers/blogsReducer'\r\n\r\nconst BlogForm = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const newBlogHandler = async (event) => {\r\n    event.preventDefault()\r\n\r\n    const contentTitle = event.target.title.value\r\n    event.target.title.value = ''\r\n    const contentAuthor = event.target.author.value\r\n    event.target.author.value = ''\r\n    const contentUrl = event.target.url.value\r\n    event.target.url.value = ''\r\n    const content = {\r\n      title: contentTitle,\r\n      author: contentAuthor,\r\n      url: contentUrl\r\n    }\r\n    dispatch(createNewBlog(content))\r\n  }\r\n\r\n  const handleNewBlog = () => (\r\n    <form onSubmit={newBlogHandler}>\r\n            Title<input\r\n        id=\"title\"\r\n        data-cy='title'\r\n        type=\"text\"\r\n        name=\"title\">\r\n      </input><br></br>\r\n\r\n            Author<input\r\n        id=\"author\"\r\n        data-cy='author'\r\n        type=\"text\"\r\n        name=\"author\">\r\n      </input><br></br>\r\n\r\n            Url<input\r\n        id=\"url\"\r\n        data-cy='url'\r\n        type=\"text\"\r\n        name=\"url\">\r\n      </input><br></br>\r\n      <button type=\"submit\" data-cy='create-button'>Create</button>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div>{handleNewBlog()}</div>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React from 'react'\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Users = ({ users }) => {\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>\r\n              Users\r\n              </TableCell>\r\n              <TableCell>\r\n              Blogs Created\r\n              </TableCell>\r\n            </TableRow>\r\n            {users.map(user =>\r\n              <TableRow key={user.id}>\r\n                <TableCell>\r\n                  <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {user.blogs.length}\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst User = ({ user }) => {\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  console.log(user)\r\n  console.log(user.blogs)\r\n\r\n  return (\r\n    <div>\r\n      {user.name}\r\n      {user.blogs.map((blog) => {\r\n        return (\r\n          <li key={blog.id}><Link to={`/blogs/${blog.id}`}>{blog.title}</Link></li>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst getUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getUsers }","import userService from '../services/users'\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_USERS':\r\n    return action.data\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const initUsers = () => {\r\n  return async dispatch => {\r\n    const users = await userService.getUsers()\r\n    dispatch({\r\n      type: 'INIT_USERS',\r\n      data: users\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer","import React from 'react'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if(!notification){\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {notification.type === 'success' ? (\r\n        <Alert severity='success'>\r\n          {notification.message}\r\n        </Alert>\r\n      ) : (\r\n        <Alert severity='error'>\r\n          {notification.message}\r\n        </Alert>\r\n      )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { likeBlog, deleteBlog, initBlogs, commentBlog } from '../reducers/blogsReducer'\r\nimport { notificationGreen, notificationRed } from '../reducers/notificationReducer'\r\n\r\n\r\nconst IndividualBlog = ({ blog }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    dispatch(initBlogs())\r\n  }, [dispatch])\r\n\r\n  const likeHandler = (blog) => {\r\n    dispatch(likeBlog(blog))\r\n    dispatch(notificationGreen(`You have liked ${blog.title}`, 5))\r\n  }\r\n\r\n  const deleteHandler = async () => {\r\n    const result = window.confirm(`Are you sure you want to delete the blog ${blog.title} by ${blog.author} ?`)\r\n    if(result){\r\n      try {\r\n        await dispatch(deleteBlog(blog))\r\n        dispatch(notificationGreen(`Successfully deleted blog ${blog.title}`, 5))\r\n        history.push('/')\r\n      } catch (err) {\r\n        dispatch(notificationRed('You cant delete this blog', 5))\r\n        dispatch(notificationRed(err, 5))\r\n        return undefined\r\n      }\r\n    }\r\n  }\r\n\r\n  const commentHandler = (event) => {\r\n    event.preventDefault()\r\n    const content = event.target.comment.value\r\n    event.target.comment.value = ''\r\n    dispatch(commentBlog(content, blog))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>{blog.title} by <strong>{blog.author}</strong></p>\r\n      <p>{blog.url}</p>\r\n      <div className='likes-container' data-cy='like-container'>\r\n        {blog.likes} <button className='like-button' data-cy='like-button' onClick={() => likeHandler(blog)}>Like</button>\r\n      </div>\r\n      <p>{blog.user.username}</p>\r\n      <button className='delete-button' data-cy='delete-button' onClick={() => deleteHandler(blog)}>Delete</button><br></br>\r\n      <form onSubmit={commentHandler}>\r\n        <input id='comment' name='comment' placeholder='Add a comment'></input>\r\n        <button type='submit'>Comment</button>\r\n      </form>\r\n      <h2>Comments</h2>\r\n      <ul>\r\n        {console.log(blog.comments)}\r\n        {blog.comments.map(comment =>\r\n          <li key={comment.id}>{comment.comment}</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IndividualBlog","import React, { useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport LoginForm from './components/LoginForm'\r\nimport Toggable from './components/Toggable'\r\nimport BlogForm from './components/BlogForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { initBlogs } from './reducers/blogsReducer'\r\nimport { existingLogin, logoutUser } from './reducers/loginReducer'\r\nimport { Link, Switch, Route, useRouteMatch, useHistory } from 'react-router-dom'\r\nimport Users from './components/Users'\r\nimport User from './components/User'\r\nimport Container from '@material-ui/core/Container'\r\nimport { initUsers } from './reducers/usersReducer'\r\nimport Notification from './components/Notification'\r\nimport IndividualBlog from './components/IndividualBlog'\r\nimport { AppBar, Button } from '@material-ui/core'\r\nimport ToolBar from '@material-ui/core/Toolbar'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch(existingLogin())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    dispatch(initUsers())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    dispatch(initBlogs())\r\n  }, [dispatch])\r\n\r\n  const blogs = useSelector(state => state.blogs)\r\n  const loggedUser = useSelector(state => state.login)\r\n  const users = useSelector(state => state.users)\r\n  const notification = useSelector(state => state.notification)\r\n\r\n  const blogsList = () => (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      {blogs.sort((a, b) => (b.likes - a.likes)) && blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog}/>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  const blogForm = () => (\r\n    <Toggable buttonLabel=\"Create new Blog\">\r\n      <BlogForm />\r\n    </Toggable>\r\n  )\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser())\r\n    history.push('/')\r\n  }\r\n\r\n  const matchUser = useRouteMatch('/users/:id')\r\n  const user = matchUser ? users.find(u => u.id === matchUser.params.id) : null\r\n\r\n  const matchBlog = useRouteMatch('/blogs/:id')\r\n  const blog = matchBlog ? blogs.find(b => b.id === matchBlog.params.id) : null\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <Notification notification={notification} />\r\n      </div>\r\n      <AppBar position='static'>\r\n        <ToolBar>\r\n          <Button color='inherit' component={Link} to='/'>\r\n            Home\r\n          </Button>\r\n          <Button color='inherit' component={Link} to='/users'>\r\n            Users\r\n          </Button>\r\n          {loggedUser === null ? (\r\n            <Button color='inherit' component={Link} to='/login'>\r\n              Login\r\n            </Button>\r\n          ) : (\r\n            <div>\r\n              <em>{loggedUser.username} logged in</em>\r\n              <Button color='inherit' onClick={handleLogout}>Logout</Button>\r\n            </div>\r\n          )}\r\n        </ToolBar>\r\n      </AppBar>\r\n      <Switch>\r\n        <Route path='/users/:id'>\r\n          <User user={user}/>\r\n        </Route>\r\n        <Route path='/blogs/:id'>\r\n          <IndividualBlog blog={blog} />\r\n        </Route>\r\n        <Route path='/users'>\r\n          <Users users={users}/>\r\n        </Route>\r\n        <Route path='/' >\r\n          {loggedUser === null ?(\r\n            <LoginForm /> )\r\n            : (\r\n              <div>\r\n                {blogForm()}\r\n                {blogsList()}\r\n              </div>)\r\n          }\r\n        </Route>\r\n      </Switch>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport blogsReducer from './reducers/blogsReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport usersReducer from './reducers/usersReducer'\r\n\r\nconst reducer = (combineReducers({\r\n  login: loginReducer,\r\n  blogs: blogsReducer,\r\n  notification: notificationReducer,\r\n  users: usersReducer\r\n}))\r\n\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)  )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>, document.getElementById('root'))"],"sourceRoot":""}